Text    segment			  	;Начало сегмента команд
		assume CS:text, DS:data
Begin:  mov AX,data			;Инициализация сегментного
		mov DS,AX				;регистра DS
;Выведем на экран символ запроса
		mov AH,02h			;(1)Функция вывода символа
		mov DL,'>'			;(2)Выводимый символ
		int 21h			;(3)
;Поставим запрос на ввод строки с клавиатуры
		mov AH,3Fh			;(4)Функция ввода
		mov BX,0h			;(5)Дескриптор клавиатуры
		mov CX,128			;(6)Вводим не более 128 символов
		mov DX,offset inbuf	;(7)Адрес буфера ввода
		int 21h			;(8)
		mov actlen,AX 	;(9)Сохраним число фактически 
						;введенных символов
;Выведем для контроля на экран введенную строку другим цветом
		mov AH,40h			;(10)Функция вывода
		mov BX,1			;(11)Дескриптор экрана
		mov CX,actlen		;(12)Столько символов ввели
		add CX,esc-2		;(13)Прибавим esc-CR-LF
		mov DX,offset outbuf	;(14)Адрес выводимой строки
		int 21h			;(15)
;Перейдем назад в монохромный режим
		mov AH,09h			;(16)Функция вывода
		mov DX,offset reset	;(17)Адрес выводимой строки
		int 21h			;(18)
;Поля данных
data segment 
actlen	dw 0		;(19)Ячейка для числа введенных символов
outbuf	db 27,'[34;46m';(20)Esc-последовательность задания цвета
esc=$-outbuf			;(21)Длина этой Esc-последовательности
inbuf		db 128 dup ('*')		;(22)Буфер ввода
reset		db 27,'[Om$';(23)Esc-последовательность отмены цвета
data    ends				;Конец сегмента данных
stk     segment stack 	;Начало сегмента стека
	 	dw 128 dup (0)			;Стек
stk     ends				;Конец сегмента стека
	  	end begin				;Конец текста программы
