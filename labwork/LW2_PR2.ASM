Text    segment         ;(1)Начало сегмента команд
        assume CS:text,DS:data  ;(2)
Begin:  mov AX,data     ;(3)Инициализация сегментного
        mov DS,AX       ;(4)регистра DS
;Подготовим все необходимое для организации цикла
        mov CX,10       ;(5)Число шагов в цикле
cycle:  push CX         ;(2)Сохраним этот счетчик в стеке
;Выведем на экран контрольную стоку из трех символов
        mov AH,09h                      ;(3)
        mov DX,offset string    ;(4)
        int 21h                 ;(5)
;Организуем программную задержку
        mov CX,100      ;(6)Счетчик внешнего цикла
outer:  push CX         ;(7)Сохраним его в стеке
        mov CX,65535    ;(8)Счетчик внутреннего цикла
inner:  loop inner      ;(9)Повторим команду loop 65535 раз
        pop CX          ;(10)Восстановим внешний счетчик
        loop outer      ;(11)Повторим все это 100 раз
        pop CX          ;(12)Восстановим счетчик демо-цикла
        loop cycle      ;(13)Повторим демо-цикл CX=10 раз
;Завершим программу
        mov AX,4C00h    ;(17)
        int 21h         ;(18)
text        ends        ;(19)Конец сегмента команд
data        segment     ;(20)Начало сегмента данных
;Поля данных программы
string  db '<>$'        ;(21)

data        ends        ;(22)Конец сегмента данных
stk     segment stack 'stack' ;(23)Начало сегмента стека
        dw 128 dup (0)      ;(24)Стек
stk     ends                ;(25)Конец сегмента стека
        end begin           ;(26)Конец текста программы
