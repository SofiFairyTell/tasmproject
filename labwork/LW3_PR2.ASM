Text	segment 'code'		;(1)Начало сегмента команд
	assume  CS:text, DS:data;(2)
;Подпрограмма вывода одной точки. Параметры при вызове находятся в 
;ячейках памяти: color - цвет точки, vpage - видеостраница,
;x - X-координата, y - Y-координата
draw    proc                    ;(3)Объявление процедуры - подпрограммы  
        mov AH,0Ch              ;(4)Функция вывода пиксела
        mov AL,color            ;(5)Цвет    
        mov BH,vpage            ;(6)Видеостраница 
        mov CX,x                ;(7)X - координата
        mov DX,y                ;(8)Y - координата
        int 10h                 ;(9)Вызов BIOS
        ret                     ;(10)Команда выхода из подпрограммы
        draw endp               ;(11)Конец процедуры		
; Главная процедура, с которой начинается выполнение программы
main 	proc			;(12)Объявление главной процедуры
	mov AX,data		;(13)Инициализация сегментного
	mov DS,AX		;(14)регистра DS
				; Установим графический режим EGA
	mov AH,00h		;(15)Функция задания режима
	mov AL,10h		;(16)Графический режим EGA
	int 10h			;(17)Вызов BIOS
; Нарисуем горизонтальную линию в цикле по X
	mov CX,300		;(18)Число точек по горизонтали
line:   push CX                 
        call draw                   
        inc x                   ;(21)
        pop CX                  ;(22)
        loop line               ;(23)
;Остановим программу для наблюдения результата ее работы
	mov AH,08h		;(24)Функция ввода с клавиатуры
	int 21h			;(25)Вызов DOS
; Переключим видеоадаптер назад в текстовый режим
	mov AH,00h		;(26)Функция задания режима
	mov AL,03h		;(27)Текстовый режим
	int 10h			;(28)Вызов BIOS
	mov AX,4C00h		;(29)Завершение программы
	int 21h			;(30)
main endp			;(31)Конец главной процедуры
text ends			;(32)Конец сегмента команд
data segment			;(33)Начало сегмента данных
x dw 150			;(34)Текущая X - координата
y dw 175			;(35)Текущая Y - координата
color	db 14			;(36)Цвет точек
vpage	db 0			;(37)Видеостраница
data ends			;(38)Конец сегмента данных
stack	segment stack 'stack'	;(39)Начало сегмента стека
	dw 128 dup (0)		;(40)Стек
stack	ends			;(41)Конец сегмента стека
	end	main		;(42) Конец текста программы